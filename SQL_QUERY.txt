1-
CREATE TABLE Employees(
EMP_ID INT NOT NULL,
FIRST_NAME VARCHAR(30) NOT NULL,
LAST_NAME VARCHAR(30) NOT NULL,
SALARY INT(30) NOT NULL,
JOINING_DATE DATETIME ,
DEPARTMENT VARCHAR(30) NOT NULL,
PRIMARY KEY(EMP_ID)
);



CREATE TABLE Designation(
EMP_REF_ID INT NOT NULL,
EMP_TITLE VARCHAR(30),
AFFECTED_FROM DATETIME,
FOREIGN KEY(EMP_REF_ID) references Employees(EMP_ID)
);


CREATE TABLE variablesDetails(
EMP_REF_ID INT NOT NULL,
VARIABLES_DATE DATETIME,
VARIABLES_AMOUNT INT NOT NULL,
FOREIGN KEY(EMP_REF_ID) refrences Employees(EMP_ID)
);


INSERT INTO EMPLOYEES VALUES
(001,'Manish','Agarwal',700000,'2019-04-20 09:00:00','HR'),
(002,'Niranjan','Bose',20000,'2019-02-11 09:00:00','DA'),
(003,'Vivek','Singh',100000,'2019-01-20 09:00:00','DA'),
(004,'Ashutosh','Kapoor',700000,'2019-03-20 09:00:00','HR'),
(005,'Vihan','Banerjee',300000,'2019-06-11 09:00:00','DA'),
(006,'Atul','Diwedi',400000,'2019-05-11 09:00:00','Account'),
(007,'Satyendra','Tripathi',95000,'2019-03-20 09:00:00','Account'),
(008,'Pritika','Bhatt',80000,'2019-02-11 09:00:00','DA');


insert into variablesDetails values
(1,'2019-02-20 00:00:00',15000),
(2,'2019-06-11 00:00:00',30000),
(3,'2019-02-20 00:00:00',42000),
(4,'2019-02-20 00:00:00',14500),
(5,'2019-06-11 00:00:00',23500);

insert into designation values
(1,'Asst.Manager','2019-02-20 00:00:00'),
(2,'Senior Analyst','2019-02-20 00:00:00'),
(8,'Senior Analyst','2019-01-11 00:00:00'),
(5,'Manager','2019-10-06 00:00:00'),
(4,'Asst.Manager','2019-12-06 00:00:00'),
(7,'Team Lead','2019-06-06 00:00:00'),
(6,'Team Lead','2019-09-06 00:00:00'),
(3,'Senoir Analyst','2019-08-06 00:00:00');


2- There are four types of the join:

inner join
example-
SELECT * from employees e inner join designation d on e.emp_id=d.emp_ref_id;

left join
example-
SELECT * from employees e left join designation d on e.emp_id=d.emp_ref_id;

right join
example-
SELECT * from employees e right join designation d on e.emp_id=d.emp_ref_id;

cross join
example-
SELECT * from employees e cross join designation d on e.emp_id=d.emp_ref_id;



2.A-
SELECT CONCAT(FIRST_NAME,' ',LAST_NAME) AS FULL_NAME ,DEPARTMENT FROM EMPLOYEES WHERE EMP_ID IN (SELECT EMP_REF_ID FROM VARIABLESDETAILS WHERE VARIABLES_AMOUNT=(SELECT MIN(VARIABLES_AMOUNT) FROM VARIABLESDETAILS))
UNION
SELECT CONCAT(FIRST_NAME,' ',LAST_NAME) AS FULL_NAME ,DEPARTMENT FROM EMPLOYEES WHERE EMP_ID IN (SELECT EMP_REF_ID FROM VARIABLESDETAILS WHERE VARIABLES_AMOUNT=(SELECT MAX(VARIABLES_AMOUNT) FROM VARIABLESDETAILS));


2.c Ans- The CROSS JOIN keyword returns all matching records from both tables whether the other table matches or not. 
So, if there are rows in "Employees" that do not have matches in "Designation", or if there are rows in "Orders" 
that do not have matches in "Customers", those rows will be listed as well.

SELECT e.FIRST_NAME, d.EMP_TITLE
FROM Employees e
CROSS JOIN Designation d;

2.d Ans- There are generally five kinds of SQL Clauses in MySQL Server. They are listed as follows:

WHERE Clause
ORDER BY clause
HAVING Clause
TOP Clause
GROUP BY Clause

the order of the clauses shown below---

select top number col1,col2,_ _  from table_name
where condition 
groub by  column_name
having condidtion
order by asc or desc;


3-Ans--A procedure (often called a stored procedure) is a collection of pre-compiled SQL statements stored inside the database. 
It is a subroutine or a subprogram in the regular computing language. A procedure always contains a name, parameter lists, and SQL statements

3-b-
CREATE DEFINER=`root`@`localhost` PROCEDURE `new_procedure`()
BEGIN
SELECT CONCAT(FIRST_NAME,' ',LAST_NAME) AS FULL_NAME ,DEPARTMENT FROM EMPLOYEES WHERE EMP_ID IN (SELECT EMP_REF_ID FROM VARIABLESDETAILS WHERE VARIABLES_AMOUNT=(SELECT MIN(VARIABLES_AMOUNT) FROM VARIABLESDETAILS))
UNION
SELECT CONCAT(FIRST_NAME,' ',LAST_NAME) AS FULL_NAME ,DEPARTMENT FROM EMPLOYEES WHERE EMP_ID IN (SELECT EMP_REF_ID FROM VARIABLESDETAILS WHERE VARIABLES_AMOUNT=(SELECT MAX(VARIABLES_AMOUNT) FROM VARIABLESDETAILS));
END

